apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: antrea-agent
  namespace: {{ .Release.Namespace }}
  labels:
    app: antrea
    component: antrea-agent
spec:
  selector:
    matchLabels:
      app: antrea
      component: antrea-agent
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # Starting with v1.21, Kubernetes supports default container annotation.
        # Using "kubectl logs/exec/attach/cp" doesn't have to specify "-c antrea-agent" when troubleshooting.
        kubectl.kubernetes.io/default-container: antrea-agent
        # Automatically restart Pods with a RollingUpdate if the ConfigMap changes
        # See https://helm.sh/docs/howto/charts_tips_and_tricks/#automatically-roll-deployments
        checksum/config: ac3c14eed7ca0dc28bf2d659cd2c4e4a39d55278fb9a8759c30ea12eff89e518
      labels:
        app: antrea
        component: antrea-agent
    spec:
      hostNetwork: true
      priorityClassName: system-node-critical
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - effect: NoExecute
          operator: Exists
      serviceAccountName: antrea-agent
      initContainers:
        - name: install-cni
          image: "antrea/antrea-agent-ubuntu:v2.0.1"
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: 100m
          command: ["install_cni"]
          securityContext:
            capabilities:
              add:
                - SYS_MODULE
          env:
            # SKIP_CNI_BINARIES takes in values as a comma separated list of
            # binaries that need to be skipped for installation, e.g. "portmap, bandwidth".
            - name: SKIP_CNI_BINARIES
              value: ""
          volumeMounts:
            - name: antrea-config
              mountPath: /etc/antrea/antrea-cni.conflist
              subPath: antrea-cni.conflist
              readOnly: true
            - name: host-cni-conf
              mountPath: /host/etc/cni/net.d
            - name: host-cni-bin
              mountPath: /host/opt/cni/bin
            # For loading the OVS kernel module.
            - name: host-lib-modules
              mountPath: /lib/modules
              readOnly: true
            # For changing the default permissions of the run directory.
            - name: host-var-run-antrea
              mountPath: /var/run/antrea
      containers:
        - name: antrea-agent
          image: "antrea/antrea-agent-ubuntu:v2.0.1"
          imagePullPolicy: IfNotPresent
          command: ["antrea-agent"]
          # Log to both "/var/log/antrea/" and stderr (so "kubectl logs" can work).-
          args:
            - "--config=/etc/antrea/antrea-agent.conf"
            - "--logtostderr=false"
            - "--log_dir=/var/log/antrea"
            - "--alsologtostderr"
            - "--log_file_max_size=100"
            - "--log_file_max_num=4"
          env:
            # Provide pod and node information for clusterinformation CRD.
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          resources:
            requests:
              cpu: 200m
          ports:
            - containerPort: 10350
              name: api
              protocol: TCP
          livenessProbe:
            httpGet:
              host: localhost
              path: /livez
              port: api
              scheme: HTTPS
            initialDelaySeconds: 10
            timeoutSeconds: 5
            periodSeconds: 10
            failureThreshold: 5
          readinessProbe:
            httpGet:
              host: localhost
              path: /readyz
              port: api
              scheme: HTTPS
            initialDelaySeconds: 5
            timeoutSeconds: 5
            periodSeconds: 10
            # In large-scale clusters, it may take up to 40~50 seconds for the antrea-agent to reconnect to the antrea
            # Service after the antrea-controller restarts. The antrea-agent shouldn't be reported as NotReady in this
            # scenario, otherwise the DaemonSet controller would restart all agents at once, as opposed to performing a
            # rolling update. Set failureThreshold to 8 so it can tolerate 70s of disconnection.
            failureThreshold: 8
          securityContext:
            privileged: true
          volumeMounts:
            - name: antrea-config
              mountPath: /etc/antrea/antrea-agent.conf
              subPath: antrea-agent.conf
              readOnly: true
            - name: host-var-run-antrea
              mountPath: /var/run/antrea
            - name: host-var-run-antrea
              mountPath: /var/run/openvswitch
              subPath: openvswitch
            # host-local IPAM stores allocated IP addresses as files in /var/lib/cni/networks/$NETWORK_NAME.
            # Mount a sub-directory of host-var-run-antrea to it for persistence of IP allocation.
            - name: host-var-run-antrea
              mountPath: /var/lib/cni
              subPath: cni
            # We need to mount both the /proc directory and the /var/run/netns directory so that
            # antrea-agent can open the network namespace path when setting up Pod
            # networking. Different container runtimes may use /proc or /var/run/netns when invoking
            # the CNI commands. Docker uses /proc and containerd uses /var/run/netns.
            - name: host-var-log-antrea
              mountPath: /var/log/antrea
            - name: host-proc
              mountPath: /host/proc
              readOnly: true
            - name: host-var-run-netns
              mountPath: /host/var/run/netns
              readOnly: true
              # When a container is created, a mount point for the network namespace is added under
              # /var/run/netns on the host, which needs to be propagated to the antrea-agent container.
              mountPropagation: HostToContainer
            - name: xtables-lock
              mountPath: /run/xtables.lock
        - name: antrea-ovs
          image: "antrea/antrea-agent-ubuntu:v2.0.1"
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: 200m
          command: ["start_ovs"]
          args:
            - "--log_file_max_size=100"
            - "--log_file_max_num=4"
          securityContext:
            capabilities:
              add:
                - SYS_NICE
                - NET_ADMIN
                - SYS_ADMIN
                - IPC_LOCK
          livenessProbe:
            exec:
              # docker CRI doesn't honor timeoutSeconds, add "timeout" to the command as a workaround.
              # https://github.com/kubernetes/kubernetes/issues/51901
              command:
                - /bin/sh
                - -c
                - timeout 10 container_liveness_probe ovs
            initialDelaySeconds: 5
            timeoutSeconds: 10
            periodSeconds: 10
            failureThreshold: 5
          volumeMounts:
            - name: host-var-run-antrea
              mountPath: /var/run/openvswitch
              subPath: openvswitch
            - name: host-var-log-antrea
              mountPath: /var/log/openvswitch
              subPath: openvswitch
      volumes:
        - name: antrea-config
          configMap:
            name: antrea-config
        - name: host-cni-conf
          hostPath:
            path: /etc/cni/net.d
        - name: host-cni-bin
          hostPath:
            path: /opt/cni/bin
        - name: host-proc
          hostPath:
            path: /proc
        - name: host-var-run-netns
          hostPath:
            path: /var/run/netns
        - name: host-var-run-antrea
          hostPath:
            path: /var/run/antrea
            # we use subPath to create run subdirectories for different component (e.g. OVS) and
            # subPath requires the base volume to exist
            type: DirectoryOrCreate
        - name: host-var-log-antrea
          hostPath:
            path: /var/log/antrea
            # we use subPath to create logging subdirectories for different component (e.g. OVS)
            type: DirectoryOrCreate
        - name: host-lib-modules
          hostPath:
            path: /lib/modules
        - name: xtables-lock
          hostPath:
            path: /run/xtables.lock
            type: FileOrCreate